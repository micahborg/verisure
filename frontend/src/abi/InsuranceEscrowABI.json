{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_attestationCenter",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_insuranceCompany",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_stakingPool",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "afterTaskSubmission",
      "inputs": [
        {
          "name": "_taskInfo",
          "type": "tuple",
          "internalType": "struct IAttestationCenter.TaskInfo",
          "components": [
            {
              "name": "proofOfTask",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "taskPerformer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "taskDefinitionId",
              "type": "uint16",
              "internalType": "uint16"
            }
          ]
        },
        {
          "name": "_isApproved",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "",
          "type": "uint256[2]",
          "internalType": "uint256[2]"
        },
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "attestationCenter",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "beforeTaskSubmission",
      "inputs": [
        {
          "name": "_taskInfo",
          "type": "tuple",
          "internalType": "struct IAttestationCenter.TaskInfo",
          "components": [
            {
              "name": "proofOfTask",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "taskPerformer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "taskDefinitionId",
              "type": "uint16",
              "internalType": "uint16"
            }
          ]
        },
        {
          "name": "_isApproved",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "_tpSignature",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "_taSignature",
          "type": "uint256[2]",
          "internalType": "uint256[2]"
        },
        {
          "name": "_operatorIds",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "depositToEscrow",
      "inputs": [],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "getEscrowBalance",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "insuranceCompany",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "providerBalances",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "stakingPool",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalEscrowBalance",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "withdrawEscrow",
      "inputs": [
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "ClaimPaid",
      "inputs": [
        {
          "name": "provider",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Deposited",
      "inputs": [
        {
          "name": "insurer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "EscrowWithdrawn",
      "inputs": [
        {
          "name": "insurer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    }
  ],
  "bytecode": {
    "object": "0x6080604052348015600e575f80fd5b50604051610900380380610900833981016040819052602b916085565b5f80546001600160a01b039485166001600160a01b03199182161790915560018054938516938216939093179092556002805491909316911617905560be565b80516001600160a01b03811681146080575f80fd5b919050565b5f805f606084860312156096575f80fd5b609d84606b565b925060a960208501606b565b915060b560408501606b565b90509250925092565b610835806100cb5f395ff3fe60806040526004361061008f575f3560e01c8063c56e610e11610057578063c56e610e14610154578063d78f51b914610168578063d92807a214610187578063dd1a5387146101a5578063fe74edbd146101c4575f80fd5b80630c56ae3b1461009357806328ac7f2c146100cf5780633eb5241d14610108578063502f5bd014610112578063876512d014610135575b5f80fd5b34801561009e575f80fd5b506002546100b2906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100da575f80fd5b506100fa6100e93660046105bd565b60046020525f908152604090205481565b6040519081526020016100c6565b6101106101d9565b005b34801561011d575f80fd5b5061011061012c36600461067b565b50505050505050565b348015610140575f80fd5b5061011061014f366004610741565b6102cf565b34801561015f575f80fd5b506003546100fa565b348015610173575f80fd5b506001546100b2906001600160a01b031681565b348015610192575f80fd5b505f546100b2906001600160a01b031681565b3480156101b0575f80fd5b506101106101bf36600461067b565b6103e7565b3480156101cf575f80fd5b506100fa60035481565b6001546001600160a01b031633146102295760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b5f34116102825760405162461bcd60e51b815260206004820152602160248201527f4465706f736974206d7573742062652067726561746572207468616e207a65726044820152606f60f81b6064820152608401610220565b3460035f828254610293919061076c565b909155505060405134815233907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c49060200160405180910390a2565b6001546001600160a01b0316331461031a5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610220565b6003548111156103615760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b6044820152606401610220565b8060035f828254610372919061077f565b90915550506001546040516001600160a01b039091169082156108fc029083905f818181858888f193505050501580156103ae573d5f803e3d5ffd5b5060405181815233907f67ba03b899c1b0009c08c2717653a5a03a8730cc17a1a8c0c57b4728991672f39060200160405180910390a250565b5f546001600160a01b0316331461042e5760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b6044820152606401610220565b856104705760405162461bcd60e51b815260206004820152601260248201527110db185a5b481b9bdd08185c1c1c9bdd995960721b6044820152606401610220565b5f8061047f60208a018a610792565b81019061048c91906107d5565b915091508060035410156104e25760405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e7420657363726f772066756e6473000000000000006044820152606401610220565b8060035f8282546104f3919061077f565b90915550506001600160a01b0382165f908152600460205260408120805483929061051f90849061076c565b90915550506040516001600160a01b0383169082156108fc029083905f818181858888f19350505050158015610557573d5f803e3d5ffd5b50816001600160a01b03167ff42cf8c29487b42c009006cba2a2a0ca0388229f3183e6e957e0a0b163585cb48260405161059391815260200190565b60405180910390a2505050505050505050565b6001600160a01b03811681146105ba575f80fd5b50565b5f602082840312156105cd575f80fd5b81356105d8816105a6565b9392505050565b5f8083601f8401126105ef575f80fd5b50813567ffffffffffffffff811115610606575f80fd5b60208301915083602082850101111561061d575f80fd5b9250929050565b8060408101831015610634575f80fd5b92915050565b5f8083601f84011261064a575f80fd5b50813567ffffffffffffffff811115610661575f80fd5b6020830191508360208260051b850101111561061d575f80fd5b5f805f805f805f60c0888a031215610691575f80fd5b873567ffffffffffffffff8111156106a7575f80fd5b88016080818b0312156106b8575f80fd5b9650602088013580151581146106cc575f80fd5b9550604088013567ffffffffffffffff8111156106e7575f80fd5b6106f38a828b016105df565b909650945061070790508960608a01610624565b925060a088013567ffffffffffffffff811115610722575f80fd5b61072e8a828b0161063a565b989b979a50959850939692959293505050565b5f60208284031215610751575f80fd5b5035919050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561063457610634610758565b8181038181111561063457610634610758565b5f808335601e198436030181126107a7575f80fd5b83018035915067ffffffffffffffff8211156107c1575f80fd5b60200191503681900382131561061d575f80fd5b5f80604083850312156107e6575f80fd5b82356107f1816105a6565b94602093909301359350505056fea2646970667358221220784f51dc6d9ec02e38abafb708274023889626203d9c45e463f5b96371f6230264736f6c634300081a0033",
    "sourceMap": "960:3576:6:-:0;;;1635:281;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1789:17;:38;;-1:-1:-1;;;;;1789:38:6;;;-1:-1:-1;;;;;;1789:38:6;;;;;;;;1837:36;;;;;;;;;;;;;;;1883:11;:26;;;;;;;;;;;960:3576;;14:177:38;93:13;;-1:-1:-1;;;;;135:31:38;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;:::-;960:3576:6;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061008f575f3560e01c8063c56e610e11610057578063c56e610e14610154578063d78f51b914610168578063d92807a214610187578063dd1a5387146101a5578063fe74edbd146101c4575f80fd5b80630c56ae3b1461009357806328ac7f2c146100cf5780633eb5241d14610108578063502f5bd014610112578063876512d014610135575b5f80fd5b34801561009e575f80fd5b506002546100b2906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100da575f80fd5b506100fa6100e93660046105bd565b60046020525f908152604090205481565b6040519081526020016100c6565b6101106101d9565b005b34801561011d575f80fd5b5061011061012c36600461067b565b50505050505050565b348015610140575f80fd5b5061011061014f366004610741565b6102cf565b34801561015f575f80fd5b506003546100fa565b348015610173575f80fd5b506001546100b2906001600160a01b031681565b348015610192575f80fd5b505f546100b2906001600160a01b031681565b3480156101b0575f80fd5b506101106101bf36600461067b565b6103e7565b3480156101cf575f80fd5b506100fa60035481565b6001546001600160a01b031633146102295760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b5f34116102825760405162461bcd60e51b815260206004820152602160248201527f4465706f736974206d7573742062652067726561746572207468616e207a65726044820152606f60f81b6064820152608401610220565b3460035f828254610293919061076c565b909155505060405134815233907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c49060200160405180910390a2565b6001546001600160a01b0316331461031a5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610220565b6003548111156103615760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b6044820152606401610220565b8060035f828254610372919061077f565b90915550506001546040516001600160a01b039091169082156108fc029083905f818181858888f193505050501580156103ae573d5f803e3d5ffd5b5060405181815233907f67ba03b899c1b0009c08c2717653a5a03a8730cc17a1a8c0c57b4728991672f39060200160405180910390a250565b5f546001600160a01b0316331461042e5760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b6044820152606401610220565b856104705760405162461bcd60e51b815260206004820152601260248201527110db185a5b481b9bdd08185c1c1c9bdd995960721b6044820152606401610220565b5f8061047f60208a018a610792565b81019061048c91906107d5565b915091508060035410156104e25760405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e7420657363726f772066756e6473000000000000006044820152606401610220565b8060035f8282546104f3919061077f565b90915550506001600160a01b0382165f908152600460205260408120805483929061051f90849061076c565b90915550506040516001600160a01b0383169082156108fc029083905f818181858888f19350505050158015610557573d5f803e3d5ffd5b50816001600160a01b03167ff42cf8c29487b42c009006cba2a2a0ca0388229f3183e6e957e0a0b163585cb48260405161059391815260200190565b60405180910390a2505050505050505050565b6001600160a01b03811681146105ba575f80fd5b50565b5f602082840312156105cd575f80fd5b81356105d8816105a6565b9392505050565b5f8083601f8401126105ef575f80fd5b50813567ffffffffffffffff811115610606575f80fd5b60208301915083602082850101111561061d575f80fd5b9250929050565b8060408101831015610634575f80fd5b92915050565b5f8083601f84011261064a575f80fd5b50813567ffffffffffffffff811115610661575f80fd5b6020830191508360208260051b850101111561061d575f80fd5b5f805f805f805f60c0888a031215610691575f80fd5b873567ffffffffffffffff8111156106a7575f80fd5b88016080818b0312156106b8575f80fd5b9650602088013580151581146106cc575f80fd5b9550604088013567ffffffffffffffff8111156106e7575f80fd5b6106f38a828b016105df565b909650945061070790508960608a01610624565b925060a088013567ffffffffffffffff811115610722575f80fd5b61072e8a828b0161063a565b989b979a50959850939692959293505050565b5f60208284031215610751575f80fd5b5035919050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561063457610634610758565b8181038181111561063457610634610758565b5f808335601e198436030181126107a7575f80fd5b83018035915067ffffffffffffffff8211156107c1575f80fd5b60200191503681900382131561061d575f80fd5b5f80604083850312156107e6575f80fd5b82356107f1816105a6565b94602093909301359350505056fea2646970667358221220784f51dc6d9ec02e38abafb708274023889626203d9c45e463f5b96371f6230264736f6c634300081a0033",
    "sourceMap": "960:3576:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1079:26;;;;;;;;;;-1:-1:-1;1079:26:6;;;;-1:-1:-1;;;;;1079:26:6;;;;;;-1:-1:-1;;;;;178:32:38;;;160:51;;148:2;133:18;1079:26:6;;;;;;;;1343:51;;;;;;;;;;-1:-1:-1;1343:51:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;;756:25:38;;;744:2;729:18;1343:51:6;610:177:38;2009:275:6;;;:::i;:::-;;3314:287;;;;;;;;;;-1:-1:-1;3314:287:6;;;;;:::i;:::-;;;;;;;;;3695:332;;;;;;;;;;-1:-1:-1;3695:332:6;;;;;:::i;:::-;;:::i;4097:102::-;;;;;;;;;;-1:-1:-1;4174:18:6;;4097:102;;1042:31;;;;;;;;;;-1:-1:-1;1042:31:6;;;;-1:-1:-1;;;;;1042:31:6;;;1004:32;;;;;;;;;;-1:-1:-1;1004:32:6;;;;-1:-1:-1;;;;;1004:32:6;;;2448:860;;;;;;;;;;-1:-1:-1;2448:860:6;;;;;:::i;:::-;;:::i;1164:33::-;;;;;;;;;;;;;;;;2009:275;2085:16;;-1:-1:-1;;;;;2085:16:6;2071:10;:30;2063:57;;;;-1:-1:-1;;;2063:57:6;;3424:2:38;2063:57:6;;;3406:21:38;3463:2;3443:18;;;3436:30;-1:-1:-1;;;3482:18:38;;;3475:44;3536:18;;2063:57:6;;;;;;;;;2150:1;2138:9;:13;2130:59;;;;-1:-1:-1;;;2130:59:6;;3767:2:38;2130:59:6;;;3749:21:38;3806:2;3786:18;;;3779:30;3845:34;3825:18;;;3818:62;-1:-1:-1;;;3896:18:38;;;3889:31;3937:19;;2130:59:6;3565:397:38;2130:59:6;2221:9;2199:18;;:31;;;;;;;:::i;:::-;;;;-1:-1:-1;;2245:32:6;;2267:9;756:25:38;;2255:10:6;;2245:32;;744:2:38;729:18;2245:32:6;;;;;;;2009:275::o;3695:332::-;3776:16;;-1:-1:-1;;;;;3776:16:6;3762:10;:30;3754:57;;;;-1:-1:-1;;;3754:57:6;;3424:2:38;3754:57:6;;;3406:21:38;3463:2;3443:18;;;3436:30;-1:-1:-1;;;3482:18:38;;;3475:44;3536:18;;3754:57:6;3222:338:38;3754:57:6;3839:18;;3829:6;:28;;3821:59;;;;-1:-1:-1;;;3821:59:6;;4431:2:38;3821:59:6;;;4413:21:38;4470:2;4450:18;;;4443:30;-1:-1:-1;;;4489:18:38;;;4482:48;4547:18;;3821:59:6;4229:342:38;3821:59:6;3912:6;3890:18;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;3936:16:6;;3928:42;;-1:-1:-1;;;;;3936:16:6;;;;3928:42;;;;;3963:6;;3936:16;3928:42;3936:16;3928:42;3963:6;3936:16;3928:42;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3985:35:6;;756:25:38;;;4001:10:6;;3985:35;;744:2:38;729:18;3985:35:6;;;;;;;3695:332;:::o;2448:860::-;2742:17;;-1:-1:-1;;;;;2742:17:6;2728:10;:31;2720:55;;;;-1:-1:-1;;;2720:55:6;;4911:2:38;2720:55:6;;;4893:21:38;4950:2;4930:18;;;4923:30;-1:-1:-1;;;4969:18:38;;;4962:41;5020:18;;2720:55:6;4709:335:38;2720:55:6;2793:11;2785:42;;;;-1:-1:-1;;;2785:42:6;;5251:2:38;2785:42:6;;;5233:21:38;5290:2;5270:18;;;5263:30;-1:-1:-1;;;5309:18:38;;;5302:48;5367:18;;2785:42:6;5049:342:38;2785:42:6;2899:16;;2951:14;;;;:9;:14;:::i;:::-;2940:46;;;;;;;:::i;:::-;2898:88;;;;3026:11;3004:18;;:33;;2996:71;;;;-1:-1:-1;;;2996:71:6;;6504:2:38;2996:71:6;;;6486:21:38;6543:2;6523:18;;;6516:30;6582:27;6562:18;;;6555:55;6627:18;;2996:71:6;6302:349:38;2996:71:6;3142:11;3120:18;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;3163:26:6;;;;;;:16;:26;;;;;:41;;3193:11;;3163:26;:41;;3193:11;;3163:41;:::i;:::-;;;;-1:-1:-1;;3214:39:6;;-1:-1:-1;;;;;3214:26:6;;;:39;;;;;3241:11;;3214:39;;;;3241:11;3214:26;:39;;;;;;;;;;;;;;;;;;;;;3279:8;-1:-1:-1;;;;;3269:32:6;;3289:11;3269:32;;;;756:25:38;;744:2;729:18;;610:177;3269:32:6;;;;;;;;2710:598;;2448:860;;;;;;;:::o;222:131:38:-;-1:-1:-1;;;;;297:31:38;;287:42;;277:70;;343:1;340;333:12;277:70;222:131;:::o;358:247::-;417:6;470:2;458:9;449:7;445:23;441:32;438:52;;;486:1;483;476:12;438:52;525:9;512:23;544:31;569:5;544:31;:::i;:::-;594:5;358:247;-1:-1:-1;;;358:247:38:o;792:347::-;843:8;853:6;907:3;900:4;892:6;888:17;884:27;874:55;;925:1;922;915:12;874:55;-1:-1:-1;948:20:38;;991:18;980:30;;977:50;;;1023:1;1020;1013:12;977:50;1060:4;1052:6;1048:17;1036:29;;1112:3;1105:4;1096:6;1088;1084:19;1080:30;1077:39;1074:59;;;1129:1;1126;1119:12;1074:59;792:347;;;;;:::o;1144:159::-;1238:6;1271:2;1259:15;;1256:24;-1:-1:-1;1253:44:38;;;1293:1;1290;1283:12;1253:44;1144:159;;;;:::o;1308:367::-;1371:8;1381:6;1435:3;1428:4;1420:6;1416:17;1412:27;1402:55;;1453:1;1450;1443:12;1402:55;-1:-1:-1;1476:20:38;;1519:18;1508:30;;1505:50;;;1551:1;1548;1541:12;1505:50;1588:4;1580:6;1576:17;1564:29;;1648:3;1641:4;1631:6;1628:1;1624:14;1616:6;1612:27;1608:38;1605:47;1602:67;;;1665:1;1662;1655:12;1680:1306;1861:6;1869;1877;1885;1893;1901;1909;1962:3;1950:9;1941:7;1937:23;1933:33;1930:53;;;1979:1;1976;1969:12;1930:53;2019:9;2006:23;2052:18;2044:6;2041:30;2038:50;;;2084:1;2081;2074:12;2038:50;2107:22;;2163:3;2145:16;;;2141:26;2138:46;;;2180:1;2177;2170:12;2138:46;2203:2;-1:-1:-1;2255:2:38;2240:18;;2227:32;2295:13;;2288:21;2278:32;;2268:60;;2324:1;2321;2314:12;2268:60;2347:5;-1:-1:-1;2405:2:38;2390:18;;2377:32;2434:18;2421:32;;2418:52;;;2466:1;2463;2456:12;2418:52;2505:60;2557:7;2546:8;2535:9;2531:24;2505:60;:::i;:::-;2584:8;;-1:-1:-1;2479:86:38;-1:-1:-1;2638:62:38;;-1:-1:-1;2692:7:38;2687:2;2672:18;;2638:62;:::i;:::-;2628:72;;2753:3;2742:9;2738:19;2725:33;2783:18;2773:8;2770:32;2767:52;;;2815:1;2812;2805:12;2767:52;2854:72;2918:7;2907:8;2896:9;2892:24;2854:72;:::i;:::-;1680:1306;;;;-1:-1:-1;1680:1306:38;;-1:-1:-1;1680:1306:38;;;;2828:98;;-1:-1:-1;;;1680:1306:38:o;2991:226::-;3050:6;3103:2;3091:9;3082:7;3078:23;3074:32;3071:52;;;3119:1;3116;3109:12;3071:52;-1:-1:-1;3164:23:38;;2991:226;-1:-1:-1;2991:226:38:o;3967:127::-;4028:10;4023:3;4019:20;4016:1;4009:31;4059:4;4056:1;4049:15;4083:4;4080:1;4073:15;4099:125;4164:9;;;4185:10;;;4182:36;;;4198:18;;:::i;4576:128::-;4643:9;;;4664:11;;;4661:37;;;4678:18;;:::i;5396:521::-;5473:4;5479:6;5539:11;5526:25;5633:2;5629:7;5618:8;5602:14;5598:29;5594:43;5574:18;5570:68;5560:96;;5652:1;5649;5642:12;5560:96;5679:33;;5731:20;;;-1:-1:-1;5774:18:38;5763:30;;5760:50;;;5806:1;5803;5796:12;5760:50;5839:4;5827:17;;-1:-1:-1;5870:14:38;5866:27;;;5856:38;;5853:58;;;5907:1;5904;5897:12;5922:375;5998:6;6006;6059:2;6047:9;6038:7;6034:23;6030:32;6027:52;;;6075:1;6072;6065:12;6027:52;6114:9;6101:23;6133:31;6158:5;6133:31;:::i;:::-;6183:5;6261:2;6246:18;;;;6233:32;;-1:-1:-1;;;5922:375:38:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "afterTaskSubmission((string,bytes,address,uint16),bool,bytes,uint256[2],uint256[])": "dd1a5387",
    "attestationCenter()": "d92807a2",
    "beforeTaskSubmission((string,bytes,address,uint16),bool,bytes,uint256[2],uint256[])": "502f5bd0",
    "depositToEscrow()": "3eb5241d",
    "getEscrowBalance()": "c56e610e",
    "insuranceCompany()": "d78f51b9",
    "providerBalances(address)": "28ac7f2c",
    "stakingPool()": "0c56ae3b",
    "totalEscrowBalance()": "fe74edbd",
    "withdrawEscrow(uint256)": "876512d0"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_attestationCenter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_insuranceCompany\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingPool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"insurer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"insurer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EscrowWithdrawn\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"proofOfTask\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"taskPerformer\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"taskDefinitionId\",\"type\":\"uint16\"}],\"internalType\":\"struct IAttestationCenter.TaskInfo\",\"name\":\"_taskInfo\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"_isApproved\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256[2]\",\"name\":\"\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"name\":\"afterTaskSubmission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"attestationCenter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"proofOfTask\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"taskPerformer\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"taskDefinitionId\",\"type\":\"uint16\"}],\"internalType\":\"struct IAttestationCenter.TaskInfo\",\"name\":\"_taskInfo\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"_isApproved\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_tpSignature\",\"type\":\"bytes\"},{\"internalType\":\"uint256[2]\",\"name\":\"_taSignature\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[]\",\"name\":\"_operatorIds\",\"type\":\"uint256[]\"}],\"name\":\"beforeTaskSubmission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositToEscrow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEscrowBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"insuranceCompany\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"providerBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalEscrowBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEscrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"afterTaskSubmission((string,bytes,address,uint16),bool,bytes,uint256[2],uint256[])\":{\"details\":\"Triggered automatically after task submission and approval. Transfers claim amount from escrow to the healthcare provider.\"},\"depositToEscrow()\":{\"details\":\"Allows insurance company to deposit funds into the escrow.\"},\"getEscrowBalance()\":{\"details\":\"Returns the current escrow balance.\"},\"withdrawEscrow(uint256)\":{\"details\":\"Allows insurance company to withdraw any unallocated funds.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InsuranceEscrow.sol\":\"InsuranceEscrow\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/\",\":risc0-ethereum/=lib/risc0-ethereum/\",\":risc0/=lib/risc0-ethereum/contracts/src/\"]},\"sources\":{\"contracts/IAttestationCenter.sol\":{\"keccak256\":\"0x677e0a01026a4517cebce18f318da49493c871db23b842140692593a81f101d0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5f1213b06ce4d8ade373e9a06875ec7b83090853b1b850ae5891d3e5faef845a\",\"dweb:/ipfs/QmTPBMUSChUAH6LGADRrbNDJnZtUf7hhb46kNfG6StPiuv\"]},\"contracts/IAvsLogic.sol\":{\"keccak256\":\"0xda809d5dcf28617cd8b8fcba9ed075f7f4d01cbc1ec9f3396e999cd2fb582651\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f9adb778f4e151161ba53701c348fd7b8a77ecb1103eb72cb81967394da65809\",\"dweb:/ipfs/QmZjCn3TdUYLEbb6uks6S3ZsaTX3FqXZkvuzau3niyzJH6\"]},\"contracts/InsuranceEscrow.sol\":{\"keccak256\":\"0x8fa126911450b8d19cafba7051873a3f8a91d7b6bc5e8e1cb55fcdeeceb29b02\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3c174eb7359457e890b96c5174c054e0c8242b18ff8bbc0dc794c046c52bd0f6\",\"dweb:/ipfs/QmbiCVZXdR2P6BmkV5LHuS7eLD2u4mqpYH8h8iyYpAVPWN\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.26+commit.8a97fa7a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_attestationCenter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_insuranceCompany",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stakingPool",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "provider",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimPaid",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "insurer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposited",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "insurer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "EscrowWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IAttestationCenter.TaskInfo",
              "name": "_taskInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "proofOfTask",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "taskPerformer",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "taskDefinitionId",
                  "type": "uint16"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_isApproved",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            },
            {
              "internalType": "uint256[2]",
              "name": "",
              "type": "uint256[2]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "afterTaskSubmission"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "attestationCenter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IAttestationCenter.TaskInfo",
              "name": "_taskInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "proofOfTask",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "taskPerformer",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "taskDefinitionId",
                  "type": "uint16"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_isApproved",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "_tpSignature",
              "type": "bytes"
            },
            {
              "internalType": "uint256[2]",
              "name": "_taSignature",
              "type": "uint256[2]"
            },
            {
              "internalType": "uint256[]",
              "name": "_operatorIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "beforeTaskSubmission"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositToEscrow"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getEscrowBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "insuranceCompany",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "providerBalances",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPool",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalEscrowBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawEscrow"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "afterTaskSubmission((string,bytes,address,uint16),bool,bytes,uint256[2],uint256[])": {
            "details": "Triggered automatically after task submission and approval. Transfers claim amount from escrow to the healthcare provider."
          },
          "depositToEscrow()": {
            "details": "Allows insurance company to deposit funds into the escrow."
          },
          "getEscrowBalance()": {
            "details": "Returns the current escrow balance."
          },
          "withdrawEscrow(uint256)": {
            "details": "Allows insurance company to withdraw any unallocated funds."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/",
        "risc0-ethereum/=lib/risc0-ethereum/",
        "risc0/=lib/risc0-ethereum/contracts/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/InsuranceEscrow.sol": "InsuranceEscrow"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "contracts/IAttestationCenter.sol": {
        "keccak256": "0x677e0a01026a4517cebce18f318da49493c871db23b842140692593a81f101d0",
        "urls": [
          "bzz-raw://5f1213b06ce4d8ade373e9a06875ec7b83090853b1b850ae5891d3e5faef845a",
          "dweb:/ipfs/QmTPBMUSChUAH6LGADRrbNDJnZtUf7hhb46kNfG6StPiuv"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/IAvsLogic.sol": {
        "keccak256": "0xda809d5dcf28617cd8b8fcba9ed075f7f4d01cbc1ec9f3396e999cd2fb582651",
        "urls": [
          "bzz-raw://f9adb778f4e151161ba53701c348fd7b8a77ecb1103eb72cb81967394da65809",
          "dweb:/ipfs/QmZjCn3TdUYLEbb6uks6S3ZsaTX3FqXZkvuzau3niyzJH6"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/InsuranceEscrow.sol": {
        "keccak256": "0x8fa126911450b8d19cafba7051873a3f8a91d7b6bc5e8e1cb55fcdeeceb29b02",
        "urls": [
          "bzz-raw://3c174eb7359457e890b96c5174c054e0c8242b18ff8bbc0dc794c046c52bd0f6",
          "dweb:/ipfs/QmbiCVZXdR2P6BmkV5LHuS7eLD2u4mqpYH8h8iyYpAVPWN"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "id": 6
}